<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="DataBaseTreeManager_8java" kind="file">
    <compoundname>DataBaseTreeManager.java</compoundname>
    <innerclass refid="classcom_1_1qualoutdoor_1_1recorder_1_1persistent_1_1DataBaseTreeManager" prot="public">com::qualoutdoor::recorder::persistent::DataBaseTreeManager</innerclass>
    <innerclass refid="classcom_1_1qualoutdoor_1_1recorder_1_1persistent_1_1DataBaseTreeManager_1_1TreeCursor" prot="public">com::qualoutdoor::recorder::persistent::DataBaseTreeManager::TreeCursor</innerclass>
    <innernamespace refid="namespacecom_1_1qualoutdoor_1_1recorder_1_1persistent">com::qualoutdoor::recorder::persistent</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">package<sp/></highlight><highlight class="normal">com.qualoutdoor.recorder.persistent;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>android.database.Cursor;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>android.database.sqlite.SQLiteDatabase;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*Un<sp/>DataBaseTree<sp/>Manager<sp/>va<sp/>permettre<sp/>l&apos;insertion<sp/>ordonn�e<sp/>des<sp/>lignes<sp/>dans<sp/>la<sp/>table<sp/>de<sp/>reference<sp/>selon<sp/>une<sp/>archiecture</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>arborescente.<sp/>La<sp/>nouvelle<sp/>representation<sp/>de<sp/>l&apos;arbre<sp/>dans<sp/>la<sp/>base<sp/>de<sp/>donn�es<sp/>�tant<sp/>un<sp/>&quot;applatissage&quot;<sp/>de<sp/>l&apos;arbre</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>il<sp/>va<sp/>avoir<sp/>un<sp/>cuseur<sp/>pointant<sp/>sur<sp/>une<sp/>ligne<sp/>de<sp/>la<sp/>table<sp/>qui<sp/>correspond<sp/>�<sp/>un<sp/>noeud<sp/>de<sp/>l&apos;arbre</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="classcom_1_1qualoutdoor_1_1recorder_1_1persistent_1_1DataBaseTreeManager" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcom_1_1qualoutdoor_1_1recorder_1_1persistent_1_1DataBaseTreeManager" kindref="compound">DataBaseTreeManager</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>SQLiteDatabase<sp/>db;</highlight><highlight class="comment">//base<sp/>de<sp/>donn�e<sp/>sur<sp/>laquelle<sp/>le<sp/>manager<sp/>envoie<sp/>les<sp/>requetes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1qualoutdoor_1_1recorder_1_1persistent_1_1TableDB" kindref="compound">TableDB</ref><sp/>table;</highlight><highlight class="comment">//table<sp/>de<sp/>la<sp/>base<sp/>de<sp/>donn�e<sp/>sur<sp/>laquelle<sp/>il<sp/>se<sp/>d�place</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1qualoutdoor_1_1recorder_1_1persistent_1_1DataBaseTreeManager_1_1TreeCursor" kindref="compound">TreeCursor</ref><sp/>cursor;</highlight><highlight class="comment">//curseur<sp/>qui<sp/>pointera<sp/>sur<sp/>une<sp/>ligne<sp/>pr�cise<sp/>de<sp/>la<sp/>table<sp/>de<sp/>reference<sp/>donc<sp/>sur<sp/>un<sp/>noeud<sp/>de<sp/>l&apos;arbre</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Un<sp/>manager<sp/>est<sp/>donc<sp/>construit<sp/>avec<sp/>une<sp/>bdd,<sp/>une<sp/>table<sp/>sur<sp/>laquelle<sp/>il<sp/>se<sp/>d�place,<sp/>on<sp/>appelle<sp/>la<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>m�thode<sp/>reset<sp/>pour<sp/>qu&apos;il<sp/>se<sp/>positionnne<sp/>sur<sp/>la<sp/>racine<sp/>de<sp/>l&apos;arbre*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1qualoutdoor_1_1recorder_1_1persistent_1_1DataBaseTreeManager" kindref="compound">DataBaseTreeManager</ref>(SQLiteDatabase<sp/>db,<sp/><ref refid="classcom_1_1qualoutdoor_1_1recorder_1_1persistent_1_1TableDB" kindref="compound">TableDB</ref><sp/>table)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.db<sp/>=<sp/>db;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.table<sp/>=<sp/>table;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.cursor=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1qualoutdoor_1_1recorder_1_1persistent_1_1DataBaseTreeManager_1_1TreeCursor" kindref="compound">TreeCursor</ref>();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.cursor.init();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Fonction<sp/>qui<sp/>permet<sp/>de<sp/>trouver<sp/>la<sp/>ligne<sp/>du<sp/>dernier<sp/>�l�ment<sp/>du<sp/>sous<sp/>arbre<sp/>dont<sp/>le<sp/>curseur<sp/>pointe<sp/>sur<sp/>la<sp/>racine*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getSubTreeBoundary(){</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Log.d(&quot;debug<sp/>tree&quot;,&quot;looking<sp/>for<sp/>boudary<sp/>of<sp/>sub<sp/>tree<sp/>rooted<sp/>by<sp/>&quot;<sp/>+this.cursor.getReference()+&quot;<sp/>on<sp/>line<sp/>&quot;+this.cursor.getLine());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastChild;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>selectQuery<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SELECT<sp/>line<sp/>,<sp/>VALUE<sp/>,<sp/>LEVEL<sp/><sp/>FROM<sp/>&quot;</highlight><highlight class="normal">+table.getName()+</highlight><highlight class="stringliteral">&quot;<sp/>WHERE<sp/>level<sp/>&lt;=<sp/>?<sp/>AND<sp/>line<sp/>&gt;<sp/>?<sp/><sp/>ORDER<sp/>BY<sp/>LINE<sp/>ASC<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cursor<sp/>c<sp/>=<sp/>db.rawQuery(selectQuery,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>String[]<sp/>{Integer.toString(this.cursor.level),<sp/>Integer.toString(</highlight><highlight class="keyword">this</highlight><highlight class="normal">.cursor.line)});</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c.moveToFirst())<sp/>{</highlight><highlight class="comment">//si<sp/>un<sp/>noeud<sp/>de<sp/>m�me<sp/>�tage<sp/>est<sp/>trouv�</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastChild<sp/>=<sp/>c.getInt(0)-1;</highlight><highlight class="comment">//on<sp/>recup�re<sp/>la<sp/>ligne<sp/>correspondant<sp/>au<sp/>dernier<sp/>�l�ment<sp/>du<sp/>sous<sp/>arbre</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Log.d(&quot;debug<sp/>tree____&quot;,&quot;sub<sp/>tree<sp/>boundary<sp/>found<sp/>on<sp/>line<sp/>&quot;+lastChild);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Log.d(&quot;debug<sp/>tree_____&quot;,&quot;next<sp/>brother<sp/>details<sp/>are<sp/>ref:<sp/>&quot;+c.getInt(1)+&quot;<sp/>lev:<sp/>&quot;+c.getInt(2)+&quot;<sp/>Line:&quot;+c.getInt(0)<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight><highlight class="comment">//sinon<sp/>tous<sp/>les<sp/>autres<sp/>�l�ments<sp/>de<sp/>la<sp/>liste<sp/>font<sp/>partie<sp/>du<sp/>sous<sp/>arbre</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>countQuery<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SELECT<sp/>Count(*)<sp/>FROM<sp/>&quot;</highlight><highlight class="normal">+table.getName();</highlight><highlight class="comment">//on<sp/>regarde<sp/>le<sp/>nombre<sp/>d&apos;�l�ments<sp/>dans<sp/>la<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cursor<sp/>c2<sp/>=<sp/>db.rawQuery(countQuery,null);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c2.moveToFirst();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastChild<sp/>=<sp/>c2.getInt(0)+1;</highlight><highlight class="comment">//la<sp/>ligne<sp/>du<sp/>dernier<sp/>�l�ment<sp/>de<sp/>la<sp/>liste<sp/>correspond<sp/>au<sp/>nombre<sp/>total<sp/>de<sp/>ligne<sp/>grace<sp/>�<sp/>notre<sp/>convention<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c2.close();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Log.d(&quot;debug<sp/>tree____&quot;,&quot;sub<sp/>tree<sp/>boundary<sp/>not<sp/>found<sp/>:<sp/>considering<sp/>last<sp/>node<sp/>of<sp/>the<sp/>whole<sp/>tree,<sp/>line<sp/>is<sp/>&quot;+lastChild);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.close();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lastChild;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Fonction<sp/>qui<sp/>permet<sp/>de<sp/>savoir<sp/>si<sp/>un<sp/>noeud<sp/>de<sp/>valeur<sp/>ref<sp/>est<sp/>contenue<sp/>dans<sp/>le<sp/>sous<sp/>arbre<sp/>dont<sp/>le<sp/>curseur<sp/>est<sp/>la<sp/>racine</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>si<sp/>le<sp/>noeud<sp/>est<sp/>trouv�<sp/><sp/>la<sp/>valeur<sp/>true<sp/>est<sp/>renvoy�e<sp/>et<sp/>le<sp/>curseur<sp/>sera<sp/>mis<sp/>�<sp/>jour<sp/>sur<sp/>ce<sp/>dernier</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>et<sp/>sinon<sp/>le<sp/>curseur<sp/>n&apos;est<sp/>pas<sp/>modifi�<sp/>et<sp/>la<sp/>valeur<sp/>false<sp/>est<sp/>retourn�e.</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>contains(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ref){</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//on<sp/>rep�re<sp/>les<sp/>limites<sp/>du<sp/>sous<sp/>arbre<sp/>donc<sp/>le<sp/>cuseur<sp/>pointe<sp/>sur<sp/>la<sp/>racine<sp/>afin<sp/>de<sp/>borner<sp/>l&apos;intervalle<sp/>de<sp/>recherche:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>boundary<sp/>=<sp/>getSubTreeBoundary();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Log.d(&quot;debug<sp/>tree____&quot;,&quot;limite<sp/>of<sp/>sub<sp/>tree<sp/>rooted<sp/>by<sp/>&quot;+this.cursor.getReference()+<sp/>&quot;is<sp/>&quot;+boundary);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//on<sp/>recherche<sp/>la<sp/>r�f�rence<sp/>indiqu�<sp/>en<sp/>se<sp/>limitant<sp/>au<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>selectQuery<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SELECT<sp/><sp/>LINE<sp/>,<sp/>VALUE<sp/>,<sp/>LEVEL<sp/><sp/>FROM<sp/>&quot;</highlight><highlight class="normal">+table.getName()+</highlight><highlight class="stringliteral">&quot;<sp/>WHERE<sp/>VALUE<sp/>=<sp/>?<sp/>AND<sp/>line<sp/>&lt;=<sp/>?<sp/>AND<sp/>line<sp/>&gt;<sp/>?&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cursor<sp/>c<sp/>=<sp/>db.rawQuery(selectQuery,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>String[]<sp/>{Integer.toString(ref),<sp/>Integer.toString(boundary),Integer.toString(this.cursor.line)});</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c.moveToFirst())<sp/>{</highlight><highlight class="comment">//si<sp/>un<sp/>noeud<sp/>de<sp/>m�me<sp/>�tage<sp/>est<sp/>trouv�<sp/>on<sp/>update<sp/>le<sp/>curseur<sp/>et<sp/>on<sp/>renvoie<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.cursor.update(c.getInt(0),<sp/>c.getInt(1),<sp/>c.getInt(2));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Log.d(&quot;____debug<sp/>tree___&quot;,&quot;node<sp/>found<sp/>&quot;+ref+&quot;<sp/>,<sp/>details<sp/>are<sp/>line:<sp/>&quot;+c.getInt(0)+&quot;<sp/>ref:<sp/>&quot;+c.getInt(1)+&quot;<sp/>level:&quot;+c.getInt(2));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Log.d(&quot;____debug<sp/>tree___&quot;,&quot;node<sp/>not<sp/>found<sp/>&quot;+ref);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.close();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;<sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Fonction<sp/>qui<sp/>permet<sp/>d&apos;inserer<sp/>un<sp/>nouveau<sp/>noeud<sp/>dans<sp/>l&apos;arbre<sp/>dans<sp/>la<sp/>ligne<sp/>suivante</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>de<sp/>celle<sp/>qui<sp/>est<sp/>point�e<sp/>�<sp/>l&apos;instant<sp/>courant<sp/>avec<sp/>la<sp/>valeur<sp/>ref*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>insert(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ref){</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*il<sp/>faut<sp/>d�caler<sp/>toutes<sp/>les<sp/>lignes<sp/>dont<sp/>l&apos;index<sp/>est<sp/>strictement<sp/>sup�rieur<sp/>�<sp/>la<sp/>ligne<sp/>courante*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>updateQuery1<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;UPDATE<sp/>&quot;</highlight><highlight class="normal">+table.getName()+</highlight><highlight class="stringliteral">&quot;<sp/>SET<sp/>line<sp/>=<sp/>line<sp/>+<sp/>1<sp/>WHERE<sp/>LINE<sp/>&gt;<sp/>&quot;</highlight><highlight class="normal">+this.cursor.line+</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>db.execSQL(updateQuery1);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//on<sp/>insert<sp/>la<sp/>nouvelle<sp/>ligne</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>insertQuery<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;INSERT<sp/>INTO<sp/>&quot;</highlight><highlight class="normal">+table.getName()+</highlight><highlight class="stringliteral">&quot;<sp/>(LINE,VALUE,LEVEL)<sp/>VALUES<sp/>(&quot;</highlight><highlight class="normal">+(this.cursor.line+1)+</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">+ref+</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">+(this.cursor.level+1)+</highlight><highlight class="stringliteral">&quot;);&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>db.execSQL(insertQuery);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//on<sp/>met<sp/>a<sp/>jour<sp/>le<sp/>curseur<sp/>sur<sp/>le<sp/>nouveau<sp/>noeud</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.cursor.update(this.cursor.line+1,<sp/>ref,<sp/>this.cursor.level+1);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Fonction<sp/>qui<sp/>permet<sp/>d&apos;inserer<sp/>une<sp/>feuille<sp/>dans<sp/>l&apos;arbre<sp/>:<sp/>exactement<sp/>pareille<sp/>que<sp/>la<sp/>fonction<sp/>pr�c�dente</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>sauf<sp/>que<sp/>le<sp/>curseur<sp/>pointera<sp/>vers<sp/>le<sp/>noeud<sp/>pere<sp/>de<sp/>la<sp/>feuille</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>insertLeaf(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ref){</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*il<sp/>faut<sp/>d�caler<sp/>toutes<sp/>les<sp/>lignes<sp/>dont<sp/>l&apos;index<sp/>est<sp/>strictement<sp/>sup�rieur<sp/>�<sp/>la<sp/>ligne<sp/>courante*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>updateQuery1<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;UPDATE<sp/>&quot;</highlight><highlight class="normal">+table.getName()+</highlight><highlight class="stringliteral">&quot;<sp/>SET<sp/>line<sp/>=<sp/>line<sp/>+<sp/>1<sp/>WHERE<sp/>LINE<sp/>&gt;<sp/>&quot;</highlight><highlight class="normal">+this.cursor.line+</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>db.execSQL(updateQuery1);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//on<sp/>insert<sp/>la<sp/>nouvelle<sp/>ligne</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>insertQuery<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;INSERT<sp/>INTO<sp/>&quot;</highlight><highlight class="normal">+table.getName()+</highlight><highlight class="stringliteral">&quot;<sp/>(LINE,VALUE,LEVEL)<sp/>VALUES<sp/>(&quot;</highlight><highlight class="normal">+(this.cursor.line+1)+</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">+ref+</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">+(this.cursor.level+1)+</highlight><highlight class="stringliteral">&quot;);&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>db.execSQL(insertQuery);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*fonction<sp/>qui<sp/>permet<sp/>devoir<sp/>si<sp/>un<sp/>noeud<sp/>existe<sp/>et<sp/>s&apos;il<sp/>n&apos;existe<sp/>pas,<sp/>elle<sp/>le<sp/>cr��e*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>findOrCreate(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ref){</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!this.contains(ref)){</highlight><highlight class="comment">//Si<sp/>l&apos;intervalle<sp/>courant<sp/>ne<sp/>contient<sp/>pas<sp/>de<sp/>noeud<sp/>contenant<sp/>la<sp/>r�f�rence<sp/>indiqu�e</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Log.d(&quot;____debug<sp/>tree___&quot;,&quot;node<sp/>created<sp/>&quot;+ref);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.insert(ref);</highlight><highlight class="comment">//alors<sp/>on<sp/>le<sp/>cr�e</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//Dans<sp/>tous<sp/>les<sp/>cas<sp/>le<sp/>DataBaseTreeManager<sp/>aura<sp/>ses<sp/>bornes<sp/>mises<sp/>�<sp/>jour</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Fonction<sp/>qui<sp/>permet<sp/>de<sp/>retouver<sp/>un<sp/>noeud<sp/>p�re<sp/>�<sp/>partir<sp/>d&apos;un<sp/>noeud<sp/>fils,</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>l&apos;intervalle<sp/>point�<sp/>doit<sp/>donc<sp/>correspondre<sp/>�<sp/>celui<sp/>du<sp/>fils;</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/></highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>le<sp/>DataBaseTreeManager<sp/>sera<sp/>Mis<sp/>a<sp/>jour<sp/>avec<sp/>les<sp/>bornes<sp/>de<sp/>l&apos;intervalle<sp/>du<sp/>p�re</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/></highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>si<sp/>l&apos;element<sp/>n&apos;a<sp/>pas<sp/>de<sp/>p�re<sp/>alors<sp/>le<sp/>DataBaseTreeManager<sp/>sera<sp/>inchang�</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getFather()<sp/></highlight><highlight class="keywordflow">throws</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1qualoutdoor_1_1recorder_1_1persistent_1_1DataBaseException" kindref="compound">DataBaseException</ref>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this.cursor.level!=0){</highlight><highlight class="comment">//Dans<sp/>ce<sp/>cas<sp/>l&apos;intervalle<sp/>n&apos;est<sp/>pas<sp/>la<sp/>racine<sp/>donc<sp/>admet<sp/>un<sp/>p�re</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//le<sp/>p�re<sp/>est<sp/>la<sp/>ligne<sp/>la<sp/>plus<sp/>proche<sp/>au<sp/>dessus<sp/>du<sp/>curseur<sp/>dont<sp/>le<sp/>level<sp/>vaut<sp/>le<sp/>level<sp/>courant<sp/>+1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>selectQuery<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SELECT<sp/>max(<sp/>LINE<sp/>)<sp/>,<sp/>VALUE<sp/>,<sp/>LEVEL<sp/>FROM<sp/>&quot;</highlight><highlight class="normal">+this.table.getName()+</highlight><highlight class="stringliteral">&quot;<sp/>WHERE<sp/>LINE<sp/>&lt;<sp/>?<sp/>AND<sp/>LEVEL<sp/>=<sp/>?&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cursor<sp/>c<sp/>=<sp/>db.rawQuery(selectQuery,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>String[]<sp/>{Integer.toString(this.cursor.line),<sp/>Integer.toString(</highlight><highlight class="keyword">this</highlight><highlight class="normal">.cursor.level<sp/>-<sp/>1)<sp/>});</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c.moveToFirst())<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//on<sp/>a<sp/>retrouv�<sp/>le<sp/>p�re<sp/>on<sp/>met<sp/>�<sp/>jour<sp/>les<sp/>champs<sp/>du<sp/>curseur</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.cursor.update(c.getInt(0),<sp/>c.getInt(1),<sp/>c.getInt(2));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log.d(&quot;debug<sp/>tree&quot;,&quot;manager<sp/>now<sp/>pointing<sp/>on<sp/>&quot;<sp/>+<sp/>c.getInt(1)<sp/>+&quot;<sp/>on<sp/>level<sp/>&quot;+<sp/>c.getInt(2));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1qualoutdoor_1_1recorder_1_1persistent_1_1DataBaseException" kindref="compound">DataBaseException</ref>(</highlight><highlight class="stringliteral">&quot;TREE<sp/>MANAGER<sp/>GET<sp/>FATHER<sp/>:<sp/>can&apos;t<sp/>find<sp/>node<sp/>father&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.close();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//si<sp/>on<sp/>pointe<sp/>d�j�<sp/>sur<sp/>la<sp/>racine,<sp/>on<sp/>ne<sp/>fait<sp/>rien.<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Log.d(&quot;debug<sp/>tree&quot;,&quot;manager<sp/>now<sp/>pointing<sp/>on<sp/>root&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Fonction<sp/>qui<sp/>permet<sp/>de<sp/>r�initialiser<sp/>le<sp/>manager<sp/>en<sp/>repla�ant<sp/>son<sp/>curseur<sp/>sur<sp/>la<sp/>racine*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset(){</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.cursor.init();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcom_1_1qualoutdoor_1_1recorder_1_1persistent_1_1DataBaseTreeManager_1_1TreeCursor" kindref="compound">TreeCursor</ref><sp/>getCursor(){</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this.cursor;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Fonction<sp/>qui<sp/>permet<sp/>d&apos;analyser<sp/>la<sp/>ligne<sp/>suivante<sp/>de<sp/>la<sp/>table<sp/>de<sp/>ref<sp/>:<sp/>utile<sp/>pour<sp/>l&apos;�crivain*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>moveToNextLine(){</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>exists;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>selectQuery<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SELECT<sp/><sp/>LINE,<sp/>VALUE<sp/>,<sp/>LEVEL<sp/>FROM<sp/>&quot;</highlight><highlight class="normal">+this.table.getName()+</highlight><highlight class="stringliteral">&quot;<sp/>WHERE<sp/>LINE<sp/>=<sp/>?&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cursor<sp/>c<sp/>=<sp/>db.rawQuery(selectQuery,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>String[]<sp/>{Integer.toString(this.cursor.line+1)});</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c.moveToFirst())<sp/>{</highlight><highlight class="comment">//si<sp/>la<sp/>ligne<sp/>suivante<sp/>existe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.cursor.update(c.getInt(0),<sp/>c.getInt(1),c.getInt(2));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exists<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exists<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.close();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exists;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Classe<sp/>interne<sp/>qui<sp/>permet<sp/>simplement<sp/>de<sp/>caracteriser<sp/>l&apos;objet<sp/>curseur*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="classcom_1_1qualoutdoor_1_1recorder_1_1persistent_1_1DataBaseTreeManager_1_1TreeCursor" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcom_1_1qualoutdoor_1_1recorder_1_1persistent_1_1DataBaseTreeManager_1_1TreeCursor" kindref="compound">TreeCursor</ref><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line;</highlight><highlight class="comment">//numero<sp/>de<sp/>la<sp/>ligne<sp/>point�e<sp/>par<sp/>le<sp/>curseur;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reference;</highlight><highlight class="comment">//le<sp/>champs<sp/>reference<sp/>de<sp/>la<sp/>ligne<sp/>point�e<sp/>par<sp/>le<sp/>curseur;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level;<sp/></highlight><highlight class="comment">//le<sp/>champs<sp/>level<sp/>de<sp/>la<sp/>ligne<sp/>point�e<sp/>par<sp/>le<sp/>curseur;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getLevel(){</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this.level;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getReference(){</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this.reference;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getLine(){</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this.line;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init(){</highlight><highlight class="comment">//on<sp/>positionne<sp/>le<sp/>curseur<sp/>en<sp/>root;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.line=2;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.reference=0;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.level=0;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>li,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ref,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev){</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.line=li;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.reference=ref;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.level=lev;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/nicolas/Programmation/android-workspace/QualOutdoor-Recorder/src/com/qualoutdoor/recorder/persistent/DataBaseTreeManager.java"/>
  </compounddef>
</doxygen>
